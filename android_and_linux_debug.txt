android_and_linux_debug
	java-exception(in frameworks and app layer wirtten in java codes);native(in userspace,inlcuding native c/c++ app and lib);
	kernel(kernel opps and kernel panic in linux kernel mode);external(device its own memory-space adn binary codes);
	
	printk/pr_debug/dev_dbg log输出到环形buffer里，调用控制台驱动输出信息到控制台
	
	KERN_EMERG	0
	KERN_ALERT	1
	KERN_CRIT	2
	KERN_ERR	3
	KERN_WARNING	4
	KERN_NOTICE	5
	KERN_INFO	6
	KERN_DEBUG	7
	KERN_DEFAULT	d
	
	修改控制台log输出级别，只有低于这个级别的log才会被输出,默认是default级别,即输出所有等级的信息
	echo 8 > /proc/sys/kernel/printk  
    vim kernel/kernel/printk.c  
	
	dump_stack()	打印堆栈函数 快速清理函数调用关系
	
	adb：adb shell dmesg/adb shell cat proc/kmsg
	串口：连接串口线,且确保kernel serial配置项已打开
    CONFIG_SERIAL_MSM_HSL=y
    CONFIG_SERIAL_MSM_HSL_CONSOLE=y
	
	查看log：logcat
	/dev 查看主从设备号
	/sys 统一设备模型来管理，提供读写接口方便调试      
	/sys/block    系统中所有块设备
    /sys/bus       内核设备按总线类型分层放置的目录结构
    /sys/class     按照设备功能分类的设备模型
    /sys/devices 内核对系统分层次表达模型
    /sys/kernel  内核所有可调整参数的位置
    /sys/module  系统中所有模块信息
    /sys/power    系统中电源选项
	
	/proc 主要查询硬件信息，进程状态，系统日志 
	查看cpu信息     cat /proc/cpuinfo
    查看mem信息     cat /proc/meminfo
    查看分区信息    cat /proc/partitions
    查看进程状态    cat /proc/pid/status
    查看进程打开文件  cat /proc/pid/fd
    查看日志        cat /proc/kmsg

	getevent -l 目录    获取系统的输入事件
    setevent     发送模拟事件
	set/get/watch prop
	top/ps
    netstat      显示各种网络相关的信息
    vmstat       监控cpu使用率，内存使用，虚拟交换，IO读写
	strace -wc ls	跟踪还未启动的程序，启动时开始跟踪
	strace -p pid 	跟踪已启动的程序，跟踪系统函数调用，并统计调用过程的错误、时间
	dumpsys [module name]	查看某个模块的信息
	
	debug-tools：
		网络
		音频
		USB
		显示
		裸机：JTAG

		反编译目标文件和可执行文件：
		objdump [option(s)] [files(s)] 	确定错误位置？
		常用选项：
		 -x:   以某种分类信息的形式把目标文件的数据组织输出
		 -t:    输出目标文件的符号表
		 -h:   输出目标文件的所有段概括
		 -j ./text/.data –S :输出指定段的信息
		 -S:   C语言与汇编语言同时显示
		
		systrace：来自于android内核例如cpu调度系统，硬盘活动，应用程序线程，生成html网页显示出各种信息
		run the strace.py and generate the html -> open this html
		cd /home/ckt/Software/sdk/platform-tools/systrace -> python strace.py [] []
		找出有问题的帧，找出警告，分析超时线程或函数
		
		
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	